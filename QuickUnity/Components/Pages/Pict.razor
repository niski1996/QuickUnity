@page "/file-upload-1"
@using Microsoft.AspNetCore.Hosting
@using QuickUnity.Entities
@using QuickUnity.Entities.Enums
@using QuickUnity.Services
@inject IWebHostEnvironment Environment
@inject MediaStorageService MediaService

<PageTitle>File Upload 1</PageTitle>
<RadzenStack Visible="@(tempPatch is not null)">
    <RadzenImage Path="Storage/img.png"></RadzenImage>
    <img src="@tempPatch" alt="Uploaded Image" style="max-width:400px; max-height:400px;"/>
    <RadzenButton Click="@(() => confirmAction.Invoke(true))">Accept</RadzenButton>
    <RadzenButton Click="@(() => confirmAction.Invoke(false))">Reject</RadzenButton>
</RadzenStack>
<RadzenCard Variant="Variant.Outlined">
    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Upload client-side without Url</RadzenText>
    <RadzenUpload Multiple="true" Change=@OnClientChange Style="width: 100%"
                  InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "select file" }})" />
</RadzenCard>

@code {
    private const long MaxFileSize = 10 * 1024 * 1024;
    private string? tempPatch;
    private Action<bool> confirmAction;

    async Task OnClientChange(UploadChangeEventArgs args)
    {
        Console.WriteLine(Environment.ContentRootPath);
        Console.WriteLine("dupa");
        
        foreach (var file in args.Files)
        {
            try
            {
                if (file.Size > MaxFileSize)
                {
                    Console.WriteLine($"File {file.Name} is too large.");
                    continue;
                }

                var request = new MediaSaveRequest
                {
                    MediaId = "avatar",
                    mediaType = MultimediaType.Image,
                    OwnerId = "dummy",
                    fileContent = file
                };
                var tmp =await MediaService.SaveFileAsync(request);
                tempPatch = tmp.Key;
                Console.WriteLine(tempPatch);
                confirmAction = tmp.Value;
                StateHasChanged();


            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error uploading file {file.Name}: {ex.Message}");
            }
        }
    }
}